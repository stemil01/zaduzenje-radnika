<!DOCTYPE html>
<html>
    <head>
        <link rel="stylesheet" href="../node_modules/bootstrap/dist/css/bootstrap.min.css">
        <link rel="stylesheet" href="../node_modules/bootstrap-select/dist/css/bootstrap-select.min.css">
        <!-- <script defer>require('popper.js')</script> -->
        <script defer>require('bootstrap')</script>
        <script defer>require('bootstrap-select')</script>
        <%- include('partials/head') %>
    </head>
    <body>
        <%- include('partials/navigation') %>

        <div class="page">
            <input id="searchInput" placeholder="Pretrazi...">

            <table class="content-table" id="listaRadnika"></table>

            <div class="pagination">
                <div class="firstPage">Prva</div>
                <div class="prevPage">Prethodna</div>
                <div class="page-num" id="page1"></div>
                <div class="page-num" id="page2"></div>
                <div class="page-num" id="page3"></div>
                <div class="nextPage">Sledeca</div>
                <div class="lastPage">Poslednja</div>
            </div>

            <button type="button" onclick="openWin_Radnik()">Dodaj radnika</button>

        </div>
        <script src="../src/renderer.js"></script>
        <script>
            const { ipcRenderer } = require('electron');
            const $ = require('jquery');

            let rowsRadnik, rowsRadnikZaduzenje;
            let desc = true;
            let tableContent, currentPage, numberOfPages;

            ipcRenderer.send("list-Radnik");
            ipcRenderer.once("rows-Radnik", (evt, rows) => {
                rowsRadnik = rows.slice();
                tableContent = rowsRadnik.slice();
                currentPage = 1;
                numberOfPages = Math.ceil(tableContent.length / pageSize)
                createTable("listaRadnika", rowsRadnik, true, currentPage);
                updatePagination(currentPage, numberOfPages);
            });


            function openWin_Radnik() {
                ipcRenderer.send("open-insert-window", 'views/popups/insertRadnik.html');
            }

            $(document).ready(function() {
                $(document).on("click", ".deleteRow", function() {
                    let $row = $(this).closest("tr");
                    let ID_Radnika = $row.find("td:first").text();
                    
                    ipcRenderer.send("delete-Radnik", ID_Radnika);
                    ipcRenderer.once("deletedRow", () => {
                        let rowsIndex = rowsRadnik.findIndex((element) => {
                            return element.ID_Radnika == ID_Radnika;
                        });
                        rowsArtikl.splice(rowsIndex, 1);
                        let tableIndex = tableContent.findIndex((element) => {
                            return element.ID_Radnika == ID_Radnika;
                        });
                        tableContent.splice(tableIndex, 1);

                        numberOfPages = Math.ceil(tableContent.length / pageSize);
                        if (currentPage > numberOfPages) currentPage--;
                        createTable("listaRadnika", tableContent, true, currentPage);
                        updatePagination(currentPage, numberOfPages);
                    });
                });

                $(document).on("click", ".editRow", function() {
                    let $row = $(this).closest("tr");
                    let $values = $row.find("td");

                    let ID_Radnika = $values.eq(0).text();
                    let PrezimeIme = $values.eq(1).text();

                    let rowHTML = `<td style="display: none;" id="ID_Radnika">${ID_Radnika}</td>
                                    <td>
                                        <input type="text" id="PrezimeIme" value="${PrezimeIme}" required>
                                    </td>
                                    <td>
                                        <button type="button" id="confirmEdit">Potvrdi</button>
                                    </td>
                                    <td>
                                        <button type="button" id="cancelEdit" onclick="cancelEdit(this, '${ID_Radnika}', '${PrezimeIme}')">Ponisti</button>
                                    </td>`;
                    $row.html(rowHTML);
                });

                $(document).on("click", "#confirmEdit", function() {
                    var $row = $(this).closest("tr");

                    let ID_Radnika = $row.find("#ID_Radnika").html();
                    let PrezimeIme = $row.find("#PrezimeIme").val();

                    if (PrezimeIme == '') {
                        ipcRenderer.send("error", 'Greska pri unosu podataka', 'Vrednosti ne mogu da budu prazne');
                    } else {
                        ipcRenderer.send("edit-Radnik", ID_Radnika, PrezimeIme);
                        ipcRenderer.once("edited-Radnik", () => {
                            let rowHMTL =  `<td class="value" style="display: none;">${ID_Radnika}</td>
                                            <td class="value">${PrezimeIme}</td>
                                            <td><button type="button" class="deleteRow">X</button></td>
                                            <td><button type="button" class="editRow">E</button></td>`;

                            $row.html(rowHMTL);

                            let rowsIndex = rowsRadnik.findIndex((element) => {
                                return element.ID_Radnika == ID_Radnika;
                            });
                            rowsRadnik[rowsIndex] = {
                                ID_Radnika: ID_Radnika,
                                PrezimeIme: PrezimeIme
                            };
                            let tableIndex = tableContent.findIndex((element) => {
                                return element.ID_Radnika == ID_Radnika;
                            });
                            tableContent[tableIndex] = {
                                ID_Radnika: ID_Radnika,
                                PrezimeIme: PrezimeIme
                            };
                        });
                    }
                });

                $(document).on("click", ".headerCell", function() {
                    let attribute = $(this).text();
                    let key = $("#searchInput").val();
                    console.log($(this).closest("table").attr("id"));

                    desc = !desc;
                    createTable("listaRadnika", filterTable(rowsRadnik, attribute, desc, key, 'PrezimeIme'), true);
                });

                $(document).on("change keyup paste", "#searchInput", debounce(() => {
                    let key = $("#searchInput").val();

                    createTable("listaRadnika", searchTable(rowsRadnik, key, 'PrezimeIme'), true);
                }, 350));

                $(document).on("change", "#searchBy", function() {
                    let key = $("#searchInput").val();

                    createTable("listaRadnika", searchTable(rowsRadnik, key, 'PrezimeIme'), true);
                });
                
                $(document).on("click", ".value", function() {
                    if ($(this).closest("table").attr("id") == "listaRadnika") {
                        let PrezimeIme = $(this).text(), ID_Radnika = $(this).closest("tr").find("td:first").text();
                        $(".page").empty();

                        ipcRenderer.send("req-ukupno-zaduzenje", ID_Radnika);
                        ipcRenderer.once("res-ukupno-zaduzenje", (evt, ukupnoZaduzenje) => {
                            let pageHTML = `<p>${PrezimeIme}</p>
                                            <p>Ukupno zaduzenje: ${ukupnoZaduzenje}</p>
                                            <table class="content-table" id="zaduzenjeRadnika"></table>
                                            <a href="radnici.ejs">Nazad</a>`;
                            $(".page").html(pageHTML);

                            ipcRenderer.send("list-Radnik-Zaduzenje", PrezimeIme);
                            ipcRenderer.once("Radnik-Zaduzenje", (evt, rows) => {
                                rowsRadnikZaduzenje = rows;
                                createTable("zaduzenjeRadnika", rowsRadnikZaduzenje, false);
                            });
                        });
                    }
                });

                // pagination
                $(document).on("click", ".page-num", function() {
                    currentPage = parseInt($(this).text());
                    createTable("listaArtikala", tableContent, true, currentPage);
                    updatePagination(currentPage, numberOfPages);
                });

                $(document).on("click", ".prevPage", function() {
                    currentPage--;
                    createTable("listaArtikala", tableContent, true, currentPage);
                    updatePagination(currentPage, numberOfPages);
                });
                
                $(document).on("click", ".nextPage", function() {
                    currentPage++;
                    createTable("listaArtikala", tableContent, true, currentPage);
                    updatePagination(currentPage, numberOfPages);
                });

                $(document).on("click", ".firstPage", function() {
                    currentPage = 1;
                    createTable("listaArtikala", tableContent, true, currentPage);
                    updatePagination(currentPage, numberOfPages);
                });

                $(document).on("click", ".lastPage", function() {
                    currentPage = Math.max(numberOfPages, 1);
                    createTable("listaArtikala", tableContent, true, currentPage);
                    updatePagination(currentPage, numberOfPages);
                });
            });

            function cancelEdit(btn, ID_Radnika, PrezimeIme) {
                let rowHMTL =  `<td class="value" style="display: none;">${ID_Radnika}</td>
                                <td class="value">${PrezimeIme}</td>
                                <td><button type="button" class="deleteRow">X</button></td>
                                <td><button type="button" class="editRow">E</button></td>`;

                $(btn).closest("tr").html(rowHMTL);
            }
        </script>
    </body>
    <footer>
        <%- include('partials/footer') %>
    </footer>
</html>