<!DOCTYPE html>
<html>
    <head>
        <link rel="stylesheet" href="../node_modules/bootstrap/dist/css/bootstrap.min.css">
        <link rel="stylesheet" href="../node_modules/bootstrap-select/dist/css/bootstrap-select.min.css">
        <!-- <script defer>require('popper.js')</script> -->
        <script defer>require('bootstrap')</script>
        <script defer>require('bootstrap-select')</script>
        <%- include('partials/head') %>
    </head>
    <body>
        <header>
            <a class="home-page" href="main.ejs"><img class="img-home-button" src="../img/home-button.png" alt="Pocetna strana"></a>
            <nav>
                <ul class="nav-links">
                    <li><a href="artikli.ejs">Artikl</a></li>
                    <li><a class="current" href="radnici.ejs">Radnici</a></li>
                    <li><a href="ulaz.ejs">Ulaz</a></li>
                    <li><a href="skladiste.ejs">Stanje skladista</a></li>
                    <li><a href="zaduzenja.ejs">Zaduzenja</a></li>
                    <li><a href="razduzenja.ejs">Razduzenja</a></li>
                </ul>
            </nav>
        </header>

        <div class="page">
            <input id="searchInput" placeholder="Pretrazi...">

            <table class="content-table" id="listaRadnika"></table>

            <div class="pagination">
                <div class="firstPage">Prva</div>
                <div class="prevPage">Prethodna</div>
                <div class="page-num" id="page1"></div>
                <div class="page-num" id="page2"></div>
                <div class="page-num" id="page3"></div>
                <div class="nextPage">Sledeca</div>
                <div class="lastPage">Poslednja</div>
            </div>

            <button type="button" class="outer-button" onclick="openWin_Radnik()">Dodaj radnika</button>

        </div>
        <script src="../src/renderer.js"></script>
        <script>
            const { ipcRenderer } = require('electron');
            const { dialog } = require('@electron/remote');
            const $ = require('jquery');

            let rowsRadnik, rowsRadnikZaduzenje;
            let descPrezimeIme = true;
            let descSifraArtikla = true, descNaziv = true, descJedinicaMere = true, descCena = true, descKolicina = true, descVrednost = true;
            let tableContent, currentPage, numberOfPages;
            let tableID = "listaRadnika", rowsData, buttons = true;

            ipcRenderer.send("list-Radnik");
            ipcRenderer.once("rows-Radnik", (evt, rows) => {
                rowsRadnik = rows.slice();
                rowsData = rowsRadnik;
                tableContent = rowsRadnik.slice();
                currentPage = 1;
                numberOfPages = Math.ceil(tableContent.length / pageSize)
                createTable(tableID, rowsData, true, currentPage);
                updatePagination(currentPage, numberOfPages);
            });


            function openWin_Radnik() {
                ipcRenderer.send("open-insert-window", 'views/popups/insertRadnik.html');
            }

            $(document).ready(function() {
                $(document).on("click", ".deleteRow", throttle(function() {
                    let options = {
                        buttons: ["Da", "Ne"],
                        message: "Da ste sigurni da zelite da obrisete?"
                    };
                    let response = dialog.showMessageBoxSync(options);
                    if (response == 0) {
                        let $row = $(this).closest("tr");
                        let ID_Radnika = $row.find("td:first").text();
                        
                        ipcRenderer.send("delete-Radnik", ID_Radnika);
                        ipcRenderer.once("deletedRow", () => {
                            let rowsIndex = rowsRadnik.findIndex((element) => {
                                return element.ID_Radnika == ID_Radnika;
                            });
                            rowsRadnik.splice(rowsIndex, 1);
                            let tableIndex = tableContent.findIndex((element) => {
                                return element.ID_Radnika == ID_Radnika;
                            });
                            tableContent.splice(tableIndex, 1);

                            numberOfPages = Math.ceil(tableContent.length / pageSize);
                            if (currentPage > numberOfPages) currentPage--;
                            createTable(tableID, tableContent, true, currentPage);
                            updatePagination(currentPage, numberOfPages);
                        });
                    }
                }, 500));

                $(document).on("click", ".editRow", function() {
                    let $row = $(this).closest("tr");
                    let $values = $row.find("td");

                    let ID_Radnika = $values.eq(0).text();
                    let PrezimeIme = $values.eq(1).text();

                    let rowHTML = `<td style="display: none;" id="ID_Radnika">${ID_Radnika}</td>
                                    <td>
                                        <input type="text" id="PrezimeIme" value="${PrezimeIme}" required>
                                    </td>
                                    <td class="button-column">
                                        <button type="button" id="confirmEdit">Potvrdi</button>
                                    </td>
                                    <td class="button-column">
                                        <button type="button" id="cancelEdit" onclick="cancelEdit(this, '${ID_Radnika}', '${PrezimeIme}')">Ponisti</button>
                                    </td>`;
                    $row.html(rowHTML);
                });

                $(document).on("click", "#confirmEdit", function() {
                    var $row = $(this).closest("tr");

                    let ID_Radnika = parseInt($row.find("#ID_Radnika").html());
                    let PrezimeIme = $row.find("#PrezimeIme").val();

                    if (PrezimeIme == '') {
                        ipcRenderer.send("error", 'Greska pri unosu podataka', 'Vrednosti ne mogu da budu prazne');
                    } else {
                        ipcRenderer.send("edit-Radnik", ID_Radnika, PrezimeIme);
                        ipcRenderer.once("edited-Radnik", () => {
                            let rowHMTL =  `<td class="value" style="display: none;">${ID_Radnika}</td>
                                            <td class="value">${PrezimeIme}</td>
                                            <td class="button-column"><button type="button" class="deleteRow">Izbrisi</button></td>
                                            <td class="button-column"><button type="button" class="editRow">Izmeni</button></td>`;

                            $row.html(rowHMTL);

                            let rowsIndex = rowsRadnik.findIndex((element) => {
                                return element.ID_Radnika == ID_Radnika;
                            });
                            rowsRadnik[rowsIndex] = {
                                ID_Radnika: ID_Radnika,
                                PrezimeIme: PrezimeIme
                            };
                            let tableIndex = tableContent.findIndex((element) => {
                                return element.ID_Radnika == ID_Radnika;
                            });
                            tableContent[tableIndex] = {
                                ID_Radnika: ID_Radnika,
                                PrezimeIme: PrezimeIme
                            };
                        });
                    }
                });

                $(document).on("click", ".headerCell", function() {
                    let attribute = $(this).text();
                    let key = $("#searchInput").val();
                    let desc, searchBy;

                    if (tableID == "listaRadnika") {
                        searchBy = 'PrezimeIme';
                        desc = descPrezimeIme;
                        descPrezimeIme = !descPrezimeIme;
                    } else {
                        searchBy = $("#searchBy").val();
                        switch (attribute) {
                            case "SifraArtikla":
                                desc = descSifraArtikla;
                                descSifraArtikla = !descSifraArtikla;
                                break;
                            case "Naziv":
                                desc = descNaziv;
                                descNaziv = !descNaziv;
                                break;
                            case "JedinicaMere":
                                desc = descJedinicaMere;
                                descJedinicaMere = !descJedinicaMere;
                                break;
                            case "Cena":
                                desc = descCena;
                                descCena = !descCena;
                            case "Kolicina":
                                desc = descKolicina;
                                descKolicina = !descKolicina;
                                break;
                            case "Vrednost":
                                desc = descVrednost;
                                descVrednost = !descVrednost;
                                break;
                            default:
                                console.log('Ne poklapa se ime kolone');
                                break;
                        }
                    }

                    currentPage = 1;
                    tableContent = filterTable(rowsData, attribute, desc, key, searchBy);
                    numberOfPages = Math.ceil(tableContent.length / pageSize);
                    createTable(tableID, tableContent, buttons, currentPage);
                    updatePagination(currentPage, numberOfPages);
                });

                $(document).on("change keyup paste", "#searchInput", debounce(() => {
                    let key = $("#searchInput").val();
                    let searchBy = tableID == "listaRadnika" ? 'PrezimeIme' : $("#searchBy").val();

                    currentPage = 1;
                    tableContent = searchTable(rowsData, key, searchBy);
                    numberOfPages = Math.ceil(tableContent.length / pageSize);
                    createTable(tableID, tableContent, buttons, currentPage);
                    updatePagination(currentPage, numberOfPages);
                }, 350));

                $(document).on("change", "#searchBy", function() {
                    let key = $("#searchInput").val();
                    let searchBy = tableID == "listaRadnika" ? 'PrezimeIme' : $("#searchBy").val();

                    currentPage = 1;
                    tableContent = searchTable(rowsData, key, searchBy);
                    numberOfPages = Math.ceil(tableContent.length / pageSize);
                    createTable(tableID, tableContent, buttons, currentPage);
                    updatePagination(currentPage, numberOfPages);
                });
                
                $(document).on("click", ".value", function() {
                    if ($(this).closest("table").attr("id") == "listaRadnika") {
                        let PrezimeIme = $(this).text(), ID_Radnika = $(this).closest("tr").find("td:first").text();
                        $(".page").empty();
                        tableID = "zaduzenjeRadnika";
                        buttons = false;

                        ipcRenderer.send("req-ukupno-zaduzenje", ID_Radnika);
                        ipcRenderer.once("res-ukupno-zaduzenje", (evt, ukupnoZaduzenje) => {
                            if (!ukupnoZaduzenje) ukupnoZaduzenje = 0;
                            $(".page").html(`
                                <p class="name">${PrezimeIme}</p>
                                <p class="amount">Ukupno zaduzenje: ${ukupnoZaduzenje}</p>

                                <input id="searchInput" placeholder="Pretrazi po...">
                                <select id="searchBy">
                                    <option value="SifraArtikla">Sifri Artikla</option>
                                    <option value="Naziv" selected>Nazivu</option>
                                    <option value="JedinicaMere">Jedinici mere</option>
                                    <option value="Kolicina">Kolicini</option>
                                    <option value="Vrednost">Vrednosti</option>
                                </select>

                                <table class="content-table" id="zaduzenjeRadnika"></table>
                                
                                <div class="pagination">
                                    <div class="firstPage">Prva</div>
                                    <div class="prevPage">Prethodna</div>
                                    <div class="page-num" id="page1"></div>
                                    <div class="page-num" id="page2"></div>
                                    <div class="page-num" id="page3"></div>
                                    <div class="nextPage">Sledeca</div>
                                    <div class="lastPage">Poslednja</div>
                                </div>

                                <a href="radnici.ejs"><button class="outer-button">Nazad</button></a>
                            `);

                            ipcRenderer.send("list-Radnik-Zaduzenje", PrezimeIme);
                            ipcRenderer.once("Radnik-Zaduzenje", (evt, rows) => {
                                rowsRadnikZaduzenje = rows.slice();
                                rowsData = rowsRadnikZaduzenje;
                                tableContent = rowsRadnikZaduzenje.slice();
                                currentPage = 1;
                                numberOfPages = Math.ceil(tableContent.length / pageSize);
                                createTable(tableID, rowsRadnikZaduzenje, false, currentPage);
                                updatePagination(currentPage, numberOfPages);
                            });
                        });
                    }
                });

                // pagination
                $(document).on("click", ".page-num", function() {
                    currentPage = parseInt($(this).text());
                    createTable(tableID, tableContent, buttons, currentPage);
                    updatePagination(currentPage, numberOfPages);
                });

                $(document).on("click", ".prevPage", function() {
                    currentPage--;
                    createTable(tableID, tableContent, buttons, currentPage);
                    updatePagination(currentPage, numberOfPages);
                });
                
                $(document).on("click", ".nextPage", function() {
                    currentPage++;
                    createTable(tableID, tableContent, buttons, currentPage);
                    updatePagination(currentPage, numberOfPages);
                });

                $(document).on("click", ".firstPage", function() {
                    currentPage = 1;
                    createTable(tableID, tableContent, buttons, currentPage);
                    updatePagination(currentPage, numberOfPages);
                });

                $(document).on("click", ".lastPage", function() {
                    currentPage = Math.max(numberOfPages, 1);
                    createTable(tableID, tableContent, buttons, currentPage);
                    updatePagination(currentPage, numberOfPages);
                });
            });

            function cancelEdit(btn, ID_Radnika, PrezimeIme) {
                let rowHMTL =  `<td class="value" style="display: none;">${ID_Radnika}</td>
                                <td class="value">${PrezimeIme}</td>
                                <td class="button-column"><button type="button" class="deleteRow">Izbrisi</button></td>
                                <td class="button-column"><button type="button" class="editRow">Izmeni</button></td>`;

                $(btn).closest("tr").html(rowHMTL);
            }
        </script>
    </body>
    <footer>
        <%- include('partials/footer') %>
    </footer>
</html>
