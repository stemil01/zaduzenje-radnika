<!DOCTYPE html>
<html>
    <head>
        <link rel="stylesheet" href="../node_modules/bootstrap/dist/css/bootstrap.min.css">
        <link rel="stylesheet" href="../node_modules/bootstrap-select/dist/css/bootstrap-select.min.css">
        <!-- <script defer>require('popper.js')</script> -->
        <script defer>require('bootstrap')</script>
        <script defer>require('bootstrap-select')</script>
        <%- include('partials/head') %>
    </head>
    <body>
        <%- include('partials/navigation') %>

        <input id="searchInput" placeholder="Pretrazi po...">
        <select id="searchBy">
            <option value="PrezimeIme">Radniku</option>
            <option value="SifraArtikla">Sifri artikla</option>
            <option value="Naziv" selected>Nazivu</option>
            <option value="JedinicaMere">Jedinici mere</option>
            <option value="Kolicina">Kolicini</option>
            <option value="Datum">Datumu</option>
        </select>

        <table class="content-table" id="listaZaduzenja"></table>

        <div class="pagination">
            <div class="firstPage">Prva</div>
            <div class="prevPage">Prethodna</div>
            <div class="page-num" id="page1"></div>
            <div class="page-num" id="page2"></div>
            <div class="page-num" id="page3"></div>
            <div class="nextPage">Sledeca</div>
            <div class="lastPage">Poslednja</div>
        </div>


        <button type="button" onclick="openWin_Zaduznje()">Novo zaduzenje</button>
        <script src="../src/renderer.js"></script>
        <script>
            const { ipcRenderer } = require('electron');
            const { dialog } = require('electron').remote;
            const $ = require('jquery');

            let rowsZaduzenje;
            let descPrezimeIme = true, descSifraArtikla = true, descNaziv = true, descJedinicaMere = true, descKolicina = true, descDatum = true;
            let tableContent, currentPage, numberOfPages;
            
            ipcRenderer.send("list-Zaduzenje");
            ipcRenderer.once("rows-Zaduzenje", (evt, rows) => {
                rowsZaduzenje = rows.slice();
                tableContent = rowsZaduzenje.slice();
                currentPage = 1;
                numberOfPages = Math.ceil(tableContent.length / pageSize);
                createTable("listaZaduzenja", rowsZaduzenje, true, currentPage);
                updatePagination(currentPage, numberOfPages);
            });

            function openWin_Zaduznje() {
                ipcRenderer.send("open-insert-window", 'views/popups/insertZaduzenje.html');
            }

            $(document).ready(function() {
                $(document).on("click", ".deleteRow", function() {
                    let options = {
                        buttons: ["Da", "Ne"],
                        message: "Da ste sigurni da zelite da obrisete?"
                    };
                    let response = dialog.showMessageBoxSync(options);
                    if (response == 0) {
                        let $row = $(this).closest("tr");
                        let ID_Zaduzenja = $row.find("td:first").text();
                        
                        ipcRenderer.send("delete-Zaduzenje", ID_Zaduzenja);
                        ipcRenderer.once("deletedRow", () => {
                            let rowsIndex = rowsZaduzenje.findIndex((element) => {
                                return element.ID_Zaduzenja == ID_Zaduzenja;
                            });
                            rowsZaduzenje.splice(rowsIndex, 1);
                            let tableIndex = tableContent.findIndex((element) => {
                                return element.ID_Zaduzenja == ID_Zaduzenja;
                            });
                            tableContent.splice(tableIndex, 1);
                            
                            numberOfPages = Math.ceil(tableContent.length / pageSize);
                            if (currentPage > numberOfPages) currentPage--;
                            createTable("listaZaduzenja", tableContent, true, currentPage);
                            updatePagination(currentPage, numberOfPages);
                        });
                    }
                });

                $(document).on("click", ".editRow", function() {
                    let $row = $(this).closest("tr");
                    let values = $row.find("td");
                    let ID_Zaduzenja = values.eq(0).text(), PrezimeIme = values.eq(1).text();
                    let SifraArtikla = values.eq(2).text(), Naziv = values.eq(3).text(), JedinicaMere = values.eq(4).text();
                    let Kolicina = values.eq(5).text(), formatDatum = values.eq(6).text();
                    let Datum = formatDatum.substr(6, 4) + '-' + formatDatum.substr(3, 2) + '-' + formatDatum.substr(0, 2);
                    let UkupnaKolicina;

                    ipcRenderer.send("req-Naziv-JedinicaMere-UkupnaKolicina", SifraArtikla);
                    ipcRenderer.once("res-Naziv-JedinicaMere-UkupnaKolicina", (evt, row) => {
                        UkupnaKolicina = Object.values(row)[2];

                        let rowHTML = `<td class="value" style="display: none;" id="ID_Zaduzenja">${ID_Zaduzenja}</td>
                                    <td>
                                            <select id="PrezimeIme" class="selectpicker" data-live-search="true" required></select>
                                    </td>
                                    <td>
                                            <select id="SifraArtikla" class="selectpicker" data-live-search="true" required></select>
                                    </td>
                                    <td>
                                            <input id="Naziv" type="text" placeholder="${Naziv}" readonly>
                                    </td>
                                    <td>
                                            <input id="JedinicaMere" type="text" placeholder="${JedinicaMere}" readonly>
                                    </td>
                                    <td>
                                            <input id="Kolicina" type="number" value="${Kolicina}" max="${UkupnaKolicina}" placeholder="U skladistu je ${UkupnaKolicina}">
                                    </td>
                                    <td>
                                            <input id="Datum" type="date" value="${Datum}">
                                    </td>
                                    <td>
                                            <button type="button" id="confirmEdit" onclick="confirmEdit(this, '${PrezimeIme}', '${SifraArtikla}', '${Kolicina}')">Potvrdi</button>
                                    </td>
                                    <td>
                                            <button type="button" id="cancelEdit" onclick="cancelEdit(this, '${ID_Zaduzenja}', '${PrezimeIme}', '${SifraArtikla}', '${Naziv}', '${JedinicaMere}', '${Kolicina}', '${formatDatum}')">Ponisti</button>
                                    </td>`;

                        $row.html(rowHTML);
                        
                        ipcRenderer.send("req-Radnik");
                        ipcRenderer.once("res-Radnik", (evt, rows) => {
                            let $select = $row.find("#PrezimeIme");
                            for (let obj of rows) {
                                let temp_PrezimeIme = Object.values(obj)[1];
                                if (temp_PrezimeIme == PrezimeIme) {
                                    $select.append(`<option value="${temp_PrezimeIme}" selected>${temp_PrezimeIme}</option>`)
                                } else {
                                    $select.append(`<option value="${temp_PrezimeIme}">${temp_PrezimeIme}</option>`)
                                }
                            }
                            $select.selectpicker('refresh');
                        });

                        ipcRenderer.send("req-skladiste-SifraArtikla");
                        ipcRenderer.once("res-skladiste-SifraArtikla", (evt, rows) => {
                            let $select = $row.find("#SifraArtikla");
                            for (let obj of rows) {
                                let temp_SifraArtikla = Object.values(obj)[1];
                                if (temp_SifraArtikla == SifraArtikla) {
                                    $select.append(`<option value="${temp_SifraArtikla}" selected>${temp_SifraArtikla}</option>`);
                                } else {
                                    $select.append(`<option value="${temp_SifraArtikla}">${temp_SifraArtikla}</option>`);
                                }
                            }
                            $select.selectpicker('refresh');
                        });
                    });
                });

                $(document).on("change", "#SifraArtikla", function() {
                    let SifraArtikla = $(this).val();
                    let $row = $(this).closest("tr");

                    ipcRenderer.send("req-Naziv-JedinicaMere-UkupnaKolicina", SifraArtikla);
                    ipcRenderer.once("res-Naziv-JedinicaMere-UkupnaKolicina", (evt, row) => {
                        let [Naziv, JedinicaMere, UkupnaKolicina] = Object.values(row);

                        $row.find("#Naziv").attr("placeholder", Naziv);
                        $row.find("#JedinicaMere").attr("placeholder", JedinicaMere);
                        $row.find("#Kolicina").attr("placeholder", `U skladistu je ${UkupnaKolicina}`);
                    });
                });

                $(document).on("click", ".headerCell", function() {
                    let attribute = $(this).text();
                    let desc;
                    let key = $("#searchInput").val();
                    let searchBy = $("#searchBy").val();
                    switch (attribute) {
                        case "PrezimeIme":
                            desc = descPrezimeIme;
                            descPrezimeIme = !descPrezimeIme;
                            break;
                        case "SifraArtikla":
                            desc = descSifraArtikla; 
                            descSifraArtikla = !descSifraArtikla;
                            break;
                        case "Naziv":
                            desc = descNaziv;
                            descNaziv = !descNaziv;
                            break;
                        case "JedinicaMere":
                            desc = descJedinicaMere;
                            descJedinicaMere = !descJedinicaMere;
                            break;
                        case "Kolicina":
                            desc = descKolicina;
                            descKolicina = !descKolicina;
                            break;
                        case "Datum":
                            desc = descDatum;
                            descDatum = !descDatum;
                            break;
                        default:
                            console.log('Ne poklapa se ime kolone');
                            break;
                    }

                    currentPage = 1;
                    tableContent = filterTable(rowsZaduzenje, attribute, desc, key, searchBy);
                    numberOfPages = Math.ceil(tableContent.length / pageSize);
                    createTable("listaZaduzenja", tableContent, true, currentPage);
                    updatePagination(currentPage, numberOfPages);
                });

                $(document).on("change keyup paste", "#searchInput", debounce(() => {
                    let key = $("#searchInput").val();
                    let searchBy = $("#searchBy").val();

                    currentPage = 1;
                    tableContent = searchTable(rowsZaduzenje, key, searchBy);
                    numberOfPages = Math.ceil(tableContent.length / pageSize);
                    createTable("listaZaduzenja", tableContent, true, currentPage);
                    updatePagination(currentPage, numberOfPages);
                }, 350));

                $(document).on("change", "#searchBy", function() {
                    let key = $("#searchInput").val();
                    let searchBy = $("#searchBy").val();

                    currentPage = 1;
                    tableContent = searchTable(rowsZaduzenje, key, searchBy);
                    numberOfPages = Math.ceil(tableContent.length / pageSize);
                    createTable("listaZaduzenja", tableContent, true, currentPage);
                    updatePagination(currentPage, numberOfPages);
                });

                // pagination
                $(document).on("click", ".page-num", function() {
                    currentPage = parseInt($(this).text());
                    createTable("listaZaduzenja", tableContent, true, currentPage);
                    updatePagination(currentPage, numberOfPages);
                });

                $(document).on("click", ".prevPage", function() {
                    currentPage--;
                    createTable("listaZaduzenja", tableContent, true, currentPage);
                    updatePagination(currentPage, numberOfPages);
                });
                
                $(document).on("click", ".nextPage", function() {
                    currentPage++;
                    createTable("listaZaduzenja", tableContent, true, currentPage);
                    updatePagination(currentPage, numberOfPages);
                });

                $(document).on("click", ".firstPage", function() {
                    currentPage = 1;
                    createTable("listaZaduzenja", tableContent, true, currentPage);
                    updatePagination(currentPage, numberOfPages);
                });

                $(document).on("click", ".lastPage", function() {
                    currentPage = Math.max(numberOfPages, 1);
                    createTable("listaZaduzenja", tableContent, true, currentPage);
                    updatePagination(currentPage, numberOfPages);
                });
            });

            function confirmEdit(btn, prev_PrezimeIme, prev_SifraArtikla, prev_Kolicina) {
                let $row = $(btn).closest("tr");
                let ID_Zaduzenja = parseInt($row.find("#ID_Zaduzenja").text());
                let PrezimeIme = $row.find("#PrezimeIme").val();
                let SifraArtikla = parseInt($row.find("#SifraArtikla").val()), Naziv = $row.find("#Naziv").attr("placeholder"), JedinicaMere = $row.find("#JedinicaMere").attr("placeholder");
                let Kolicina = parseFloat($row.find("#Kolicina").val()), Datum = $row.find("#Datum").val();
                let formatDatum = Datum.substr(8, 2) + '.' + Datum.substr(5, 2) + '.' + Datum.substr(0, 4) + '.';

                ipcRenderer.send("edit-Zaduzenje", ID_Zaduzenja, prev_PrezimeIme, prev_SifraArtikla, prev_Kolicina, PrezimeIme, SifraArtikla, Kolicina, Datum);
                ipcRenderer.once("edited-Zaduzenje", () => {
                    let rowHMTL = `<td class="value" style="display: none;">${ID_Zaduzenja}</td>
                                    <td class="value">${PrezimeIme}</td>
                                    <td class="value">${SifraArtikla}</td>
                                    <td class="value">${Naziv}</td>
                                    <td class="value">${JedinicaMere}</td>
                                    <td class="value">${Kolicina}</td>
                                    <td class="value">${formatDatum}</td>
                                    <td><button type="button" class="deleteRow">X</button></td>
                                    <td><button type="button" class="editRow">E</button></td>`;

                    $row.html(rowHMTL);

                    let rowsIndex = rowsZaduzenje.findIndex((element) => {
                        return element.ID_Zaduzenja == ID_Zaduzenja;
                    });
                    rowsZaduzenje[rowsIndex] = {
                        ID_Zaduzenja: ID_Zaduzenja,
                        PrezimeIme: PrezimeIme,
                        SifraArtikla: SifraArtikla,
                        Naziv: Naziv,
                        JedinicaMere: JedinicaMere,
                        Kolicina: Kolicina,
                        Datum: Datum
                    };
                    let tableIndex = tableContent.findIndex((element) => {
                        return element.ID_Zaduzenja == ID_Zaduzenja;
                    });
                    tableContent[tableIndex] = {
                        ID_Zaduzenja: ID_Zaduzenja,
                        PrezimeIme: PrezimeIme,
                        SifraArtikla: SifraArtikla,
                        Naziv: Naziv,
                        JedinicaMere: JedinicaMere,
                        Kolicina: Kolicina,
                        Datum: Datum
                    };
                });
            }

            function cancelEdit(btn, ID_Zaduzenja, PrezimeIme, SifraArtikla, Naziv, JedinicaMere, Kolicina, Datum) {
                let rowHTML = `<td class="value" style="display: none;">${ID_Zaduzenja}</td>
                                    <td class="value">${PrezimeIme}</td> 
                                    <td class="value">${SifraArtikla}</td> 
                                    <td class="value">${Naziv}</td> 
                                    <td class="value">${JedinicaMere}</td> 
                                    <td class="value">${Kolicina}</td> 
                                    <td class="value">${Datum}</td> 
                                    <td><button type="button" class="deleteRow">X</button></td>
                                    <td><button type="button" class="editRow">E</button></td>`;

                $(btn).closest("tr").html(rowHTML);
            }
        </script>
    </body>
    <footer>
        <%- include('partials/footer') %>
    </footer>
</html>